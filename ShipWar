package MyTest.Test1ShipWar;

import java.util.*;

//основной класс для запуска

public class ShipWarTestDrive  {
    private GameHelper helper = new GameHelper();
    private ArrayList<ShipWar> shipList = new ArrayList<ShipWar>();
    private int numOfGuesses = 0;

    private void setUpGame (){
        //Создаём несколько кораблей и называем их
        ShipWar one = new ShipWar();
        one.setName("Автора");
        ShipWar two = new ShipWar();
        two.setName("Лёша");
        ShipWar three = new ShipWar();
        three.setName("Паша");
        shipList.add(one);
        shipList.add(two);
        shipList.add(three);

        System.out.println("Цель игры - потопить три корабля.");
        System.out.println("Аврора, Лёша, Паша.");
        System.out.println("Попытайтесь потопись их за минимальное количество ходов");

        for (ShipWar shipWarToSet : shipList){
            ArrayList<String> newLocation = helper.placeShipWar(3);
            shipWarToSet.setLocationCells(newLocation);
        }
    } //конец метода setUpdate

    private void startPlaying(){
        while (!shipList.isEmpty()){
            String userGuess = helper.getUserInput("Сделайте ход");
            checkUserGuess(userGuess);
        }
        finishGame();
    } // Конец метода startPlaying

    private void checkUserGuess (String userGuess){
        numOfGuesses++;
        String result = "Мимо";
        for (ShipWar shipWarToTest : shipList){
            result = shipWarToTest.checkYourself(userGuess);
            if (result.equals("Попал")){
                break;
            }
            if (result.equals("Потопил")){
                shipList.remove(shipWarToTest);
                break;
            }
        }
    } // Конец метода checkUserGuess

    private void finishGame (){
        System.out.println("Все кораблти ушли ко дну! Ваши люди теперь могут спокойно уплыть.");
        if (numOfGuesses <= 25){
        System.out.println("Это заняло у вас всего " + numOfGuesses + " попыток.");
        System.out.println("Вы успели выбраться до того, как были уничтожены.");
        } else {
        System.out.println("Это заняло у вас довольно много времени. " + numOfGuesses + " попыток.");
        System.out.println("Ваши люди покоятся на дне морском.");
        }
    } // Конец метода finishGame

    public  static void main (String[] args){
        ShipWarTestDrive game = new ShipWarTestDrive();
        game.setUpGame();
        game.startPlaying();
    }  // Конец метода main
}

-------------------------------------------------------------------------------
package MyTest.Test1ShipWar;

import java.io.*;
import java.util.*;

// Класс помошник, импортирован без исправлений

public class GameHelper {
    private static final String alphabet = "abcdefg";
    private int gridLength = 7;
    private int gridSize = 49;
    private int [] grid = new int[gridSize];
    private int shipCount = 0;

    public String getUserInput(String prompt){
        String inputLine = null;
        System.out.print(prompt + " ");
        try {
            BufferedReader is = new BufferedReader(new InputStreamReader(System.in));
            inputLine = is.readLine();
            if (inputLine.length() == 0) return null;
        } catch (IOException e){
            System.out.println("IOException: " + e);
        }
        return inputLine.toLowerCase();
    }

    public ArrayList<String> placeShipWar(int shipSize){
        ArrayList<String> alphaCells = new ArrayList<String>();
        String [] alphacoords = new String[shipSize];
        String temp = null;
        int [] coords = new int[shipSize];
        int attempts = 0;
        boolean success = false;
        int location = 0;
        shipCount++;
        int incr = 1;
        if ((shipCount % 2) == 1){
            incr = gridLength;
        }

        while (!success & attempts++ < 200){
            location = (int) (Math.random() * gridSize);
            int x = 0;
            success = true;
            while (success && x < shipSize){
                if(grid[location] == 0){
                    coords[x++] = location;
                    location += incr;
                    if(location >= gridSize){
                        success = false;
                    }
                    if(x>0 && (location % gridLength == 0)){
                        success = false;
                    }
                }
                else {success = false;}
            }
        }
        int x = 0;
        int row = 0;
        int column = 0;
        while (x < shipSize){
            grid[coords[x]] = 1;
            row = (int) (coords[x] / gridLength);
            column = coords[x] % gridLength;
            temp = String.valueOf(alphabet.charAt(column));
            alphaCells.add(temp.concat(Integer.toString(row)));
            x++;

//System.out.print(" coord " + x + " = " + alphaCells.get(x-1)); //это выражение показывает, где находится сайт(корабль)

        }

        return alphaCells;

    }
}

-------------------------------------------------------------------------------
package MyTest.Test1ShipWar;

import java.util.*;

// Механика игры

class ShipWar
{
    private ArrayList<String> locationCells;
    private String name;

    public void setLocationCells(ArrayList<String> loc){
        locationCells = loc;
    }

    public void setName(String n){
        name = n;
    }

    public String checkYourself(String userInput){
        String result = "Мимо";
        int index = locationCells.indexOf(userInput);
        if (index >= 0){
            locationCells.remove(index);
            if(locationCells.isEmpty()){
                result = "Потопил";
                System.out.println("Ой! Вы потопили корабль " + name + " :( ");
            } else {
                result = "Попал";
            }
        }
        return result;
    }
}
