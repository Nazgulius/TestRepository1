//пробная программа

//основной класс для запуска
public class SimpleDotComTestDrive { 
  public static void main (String [] args){
    SimpleDotCom dot = new SimpleDotCom();
    int[] locations = {2,3,4};
    dot.setLocationCells (locations);
    String userGuess = "2";
    String result = dot.checkYourself(userGuess);
  }
}

// обработка результата
import java.util.*;

public class DotCom {   
  private ArrayList<String> locationCells;
  private String name;
  
  public void setLocationCells(ArrayList<String> loc){
    locationCells = loc;
  }
  
  public void setName(String n){
  name = n;
  }
  
  public String checkYourself(String userInput){
    
    String result = "Мимо";
    int index = locationCells.indexOf(userInput);
    if (index >= 0){
      locationCells.remove(index);
      
      if(locationCells.isEmpty()){
      result = "Потопил";
      System.out.println("Ой! Вы потопили " + name + "  :( ");
      } else {
      result = "Попал";
      }
    }
    
    
     return result;
  }
}

 // готовый код на проверку мезанизма игры
import java.io*
import java.util.*

public class GameHelper {
 ptivate static final String alphabet = "abcdefg";
 ptivate int gridLength = 7;
 private int gridSiza = 49;
 private int [] grid = new int[gridSize];
 private int comCount = 0;
 
 public String getUserInput(String prompt){
  String inputLine = null;
  System.out.print(prompt + " ");
  try {
   BufferedReader is = new BufferedReader(new InputStreemReader(System.in));
   input:ine = is.readLine();
   if (inputLine.length() == 0) return null;
  } catch (IOException e){
   System.out.println("IOException: " + e);
  }
  return inputLine.toLowerCase();
 }
 public ArrayList<String> placeDotCom(int comSize){
 ArrayList<String> alphaCells = new ArrayList<String>();
 String [] alphacoords = new int[comSize];
 String temp = null;
 int [] cootds = new int[comSize];
 int attempts = 0;
 boolean success = false;
 int location = 0;
 
 comCount++;
 int incr = 1;
 if ((comCount % 2) == 1){
  incr = gridLength;
 }
 
 while (!success & attempts++ < 200){
  location = (int) (Math.random() * gridSize);
  int x = 0;
  success = true;
  while (success && x < comSize){
   if(grid[location] == 0){
   coords[x++] = location;
   location += incr;
   if(location >= gridSize){
    success = false;
   }
   if(x>0 && (location % gridLength == 0)){
   success = false;
   }
   }
   else {success = false;}
  }
 }
 
 int x = 0;
 int row = 0;
 int column = 0;
 
 while (x < comSize){
  grid[coords[x]] = 1;
  row = (int) (coords[x] / gridLength);
  column = coords[x] % gridLength;
  temp = String.valueOf(alphabet.charAt(column));
  
  alphaCells.add(temp.concat(Integer.toString(row)));
  x++;
  //System.out.print(" coord " + x + " = " + alphaCells.get(x-1)); //это выражение показывает, где находится сайт(корабль)
 }
 return alphaCells;
 }
}
